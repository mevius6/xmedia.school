mixin review(props)
  -
    let attrs = {}
    attrs.class = [props.class]
  -
    let {
      avatar,
      avatarFilter,
      // class
      collapsible,
      date,
      id,
      link,
      publisher,
      rating,
      stars,
      text,
      title,
      url,
      username,
      ...rest
    } = props

  article.review.flow(
    itemprop="review"
    itemscope itemtype="https://schema.org/Review"
  )&attributes(attrs)
    header.review__header&attributes({
      'data-hidden': !stars
    })
      link(itemprop="url" href= url)
      //- Timestamp
      meta(itemprop="datePublished" content= date)
      //- time(itemprop="datePublished" datetime= date)= date
      form(
        itemprop="reviewRating"
        itemscope itemtype="https://schema.org/Rating"
      )
        meta(itemprop="worstRating" content="0")
        meta(itemprop="bestRating" content="5")
        fieldset.rating-wrapper
          legend(data-hidden)
            | Рейтинг: #[span(itemprop="ratingValue") #{rating || 5}]
          if stars
            .rating
              each i in Array.from(Array(5).keys())
                - let v = `${id}-${i+1}`
                input(type="radio" name="rating" id= v value= v data-hidden)
                //- &attributes({'checked': rating.includes(i+1)})
                label.rating__star(for= v)

    blockquote.review__content.flow
      h3.review__headline(itemprop="name")= title
      if collapsible
        .flow(itemprop="reviewBody" id=`${id}-content`)
          if Array.isArray(text)
            p.review__lead.truncate-overflow= text[0]
            p.review__body.flow.collapse
              each val, i in text
                if i!==0
                  | #[span #{val}]
          else
            p.review__lead.truncate-overflow= text
      else
        p.review__lead.truncate-overflow(itemprop="reviewBody")= text

    footer.review__footer
      span.review__author
        .review__author-avatar
          if !avatar
            +placeholder({
              type: 'monogram',
              text: username,
              index: id
            })
          else
            +picture({
              class: [{ 'svg-filter': avatarFilter }],
              path: 'avatars',
              name: avatar,
              hdim: 256,
              format: 'png'
            })
        .review__author-name.subhead(
          itemprop="author"
          itemscope itemtype="https://schema.org/Person"
        )
          //- span(itemprop="name") #{username}
          +link({
            base: 'review',
            href: link,
            text: username
          })(itemprop="name")

      if collapsible
        cite.review__cite(itemprop="publisher")
          button(
            tabindex="0"
            data-disclosure
            aria-controls=`${id}-content`
            aria-expanded="false"
            data-js-anim='bg-gradient'
          ) Читать полностью

      //- cite.review__cite(
        itemprop="publisher"
        itemscope itemtype="https://schema.org/Organization")
        +link({
          base: 'review',
          href: link,
          text: publisher
        })(itemprop="name")
