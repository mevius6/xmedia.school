@use 'config';

* {
  @include config.scrollbar;
  box-sizing: inherit;

  &::before,
  &::after { box-sizing: inherit; }

  &::selection {
    color: var(--selection-foreground, inherit);
    text-shadow: none;
    background: var(--selection-background, inherit);

    /* autoprefixer: ignore next */
    -webkit-tap-highlight-color: var(--trn);
  }
}

// Contains colour swatches and theme configuration
// @layer theme { :root {…} }

:root {
  // ----------------------------------
  // Color Palettes
  // ----------------------------------
  // https://drafts.csswg.org/css2/#system-colors
  // https://drafts.csswg.org/css-color-3/#css-system

  // HSL helpers
  --trn: hsl(0 0% 0% / 0);
  --hue: 0;
  --sat: 0%;
  --lum: 98%; // #fafafa
  --lum: 96%; // #f4f4f4
  --hsl: var(--hue) var(--sat) var(--lum);
  --white: var(--hsl);

  // → https://github.com/daltonmenezes/aura-theme
  --black: #15141b;
  --white: #edecee;
  --gray: #6d6d6d;
  --purple: #a277ff;
  --purple-fading: #3d375e7f;
  --green: #61ffca;
  --orange: #ffca85;
  --pink: #f694ff;
  --blue: #82e2ff;
  --red: #ff6767;
  --background-color: var(--black);
  --foreground-color: var(--white);
  --muted-color: var(--gray);
  --selection-color: var(--purple-fading);
  --primary-color: var(--purple);
  --secondary-color: var(--green);
  --tertiary-color: var(--orange);
  --quaternary-color: var(--pink);
  --quinary-color: var(--blue);
  --senary-color: var(--red);
  --warning-color: var(--orange);
  --success-color: var(--green);
  --error-color: var(--red);
  --black-soft: #15141b;
  --white-soft: #bdbdbd;
  --gray-soft: #6d6d6d;
  --purple-soft: #8464c6;
  --purple-fading-soft: #3d375e7f;
  --green-soft: #54c59f;
  --orange-soft: #c7a06f;
  --pink-soft: #c17ac8;
  --blue-soft: #6cb2c7;
  --red-soft: #c55858;
  --background-soft-color: var(--black-soft);
  --foreground-soft-color: var(--white-soft);
  --muted-soft-color: var(--gray-soft);
  --selection-soft-color: var(--purple-fading-soft);
  --primary-soft-color: var(--purple-soft);
  --secondary-soft-color: var(--green-soft);
  --tertiary-soft-color: var(--orange-soft);
  --quaternary-soft-color: var(--pink-soft);
  --quinary-soft-color: var(--blue-soft);
  --senary-soft-color: var(--red-soft);
  --warning-soft-color: var(--orange-soft);
  --success-soft-color: var(--green-soft);
  --error-soft-color: var(--red-soft);

  // HSL notation
  --black: 249deg 15% 9%;
  --white: 270deg 6% 93%;
  --gray: 0deg 0% 43%;
  --purple: 259deg 100% 73%;
  --purple-fading: 249deg 26% 29% / 0.498;
  --teal: 160deg 100% 69%;
  --orange: 34deg 100% 76%;
  --pink: 295deg 100% 79%;
  --blue: 194deg 100% 75%;

  --neutral: hsl(var(--gray));
  --accent: hsl(var(--purple));
  --accent-a25: hsl(var(--purple) / 0.25);
  --accent-a50: hsl(var(--purple) / 0.5);
  --accent-a80: hsl(var(--purple) / 0.8);
  --accent-shade: hsl(var(--purple-fading));
  --accent-major: hsl(var(--purple)); // primary
  --accent-extra: hsl(var(--teal)); // secondary • active

  // ----------------------------------
  // Gradients ∇
  // ----------------------------------
  // Gen → https://www.joshwcomeau.com/gradient-generator/

  // ROYGBIV
  --lin-grad-voygb:
    linear-gradient(
      45deg,
      var(--accent) 0%,
      hsl(270deg 100% 75%) 8%,
      hsl(281deg 100% 77%) 15%,
      hsl(292deg 100% 78%) 23%,
      hsl(324deg 100% 78%) 31%,
      hsl(360deg 100% 81%) 38%,
      hsl(27deg 100% 76%) 46%,
      hsl(44deg 81% 73%) 54%,
      hsl(75deg 65% 72%) 62%,
      hsl(128deg 83% 78%) 69%,
      hsl(164deg 98% 67%) 77%,
      hsl(176deg 91% 63%) 85%,
      hsl(186deg 96% 68%) 92%,
      hsl(194deg 100% 75%) 100%
    );
  --lin-grad-5-hues:
    linear-gradient(
      45deg,
      var(--accent-extra) 0%,
      hsl(174deg 93% 63%) 8%,
      hsl(183deg 93% 66%) 15%,
      hsl(192deg 100% 74%) 23%,
      hsl(177deg 69% 69%) 31%,
      hsl(127deg 53% 77%) 38%,
      hsl(51deg 61% 71%) 46%,
      hsl(27deg 100% 76%) 54%,
      hsl(360deg 100% 81%) 62%,
      hsl(324deg 100% 78%) 69%,
      hsl(292deg 100% 78%) 77%,
      hsl(281deg 100% 77%) 85%,
      hsl(270deg 100% 75%) 92%,
      var(--accent) 100%
    );
  --lin-grad-4-hues:
    linear-gradient(
      45deg,
      var(--accent-extra) 0%,
      hsl(119deg 78% 79%) 9%,
      hsl(74deg 64% 71%) 18%,
      hsl(46deg 78% 72%) 27%,
      hsl(30deg 100% 76%) 36%,
      hsl(11deg 100% 79%) 45%,
      hsl(338deg 100% 79%) 55%,
      hsl(309deg 100% 78%) 64%,
      hsl(288deg 100% 78%) 73%,
      hsl(279deg 100% 76%) 82%,
      hsl(269deg 100% 75%) 91%,
      var(--accent) 100%
    );
  --lin-grad-4-hues:
    linear-gradient(
      45deg,
      var(--accent) 0%,
      hsl(269deg 100% 75%) 9%,
      hsl(279deg 100% 76%) 18%,
      hsl(288deg 100% 78%) 27%,
      hsl(309deg 100% 78%) 36%,
      hsl(338deg 100% 79%) 45%,
      hsl(11deg 100% 79%) 55%,
      hsl(30deg 100% 76%) 64%,
      hsl(46deg 78% 72%) 73%,
      hsl(74deg 64% 71%) 82%,
      hsl(119deg 78% 79%) 91%,
      var(--accent-extra) 100%
    );
  --lin-grad-purple-teal:
    linear-gradient(
      135deg,
      var(--accent) 0%,
      hsl(224deg 100% 71%) 11%,
      hsl(201deg 100% 50%) 22%,
      hsl(196deg 100% 50%) 33%,
      hsl(193deg 100% 50%) 44%,
      hsl(189deg 100% 50%) 56%,
      hsl(186deg 100% 50%) 67%,
      hsl(181deg 100% 47%) 78%,
      hsl(174deg 100% 49%) 89%,
      var(--accent-extra) 100%
    );
  // The sequence of hues w/ easing function
  --lin-grad-teal-purple-ease:
    linear-gradient(
      135deg,
      var(--accent-extra) 0%,
      hsl(176deg 100% 48%) 24%,
      hsl(185deg 100% 50%) 35%,
      hsl(189deg 100% 50%) 45%,
      hsl(193deg 100% 50%) 55%,
      hsl(198deg 100% 50%) 65%,
      hsl(216deg 100% 66%) 76%,
      var(--accent) 100%
    );
  --lin-grad-2-hues:
    linear-gradient(
      135deg,
      var(--accent-extra) 0%,
      hsl(167deg 76% 70%) 24%,
      hsl(180deg 54% 69%) 35%,
      hsl(200deg 59% 73%) 45%,
      hsl(219deg 66% 76%) 55%,
      hsl(238deg 75% 78%) 65%,
      hsl(251deg 89% 76%) 76%,
      var(--accent) 100%
    );
  // The sequence of 2 hues w/ hinting
  --lin-grad-halfs-hint:
    linear-gradient(
      135deg,
      var(--lin-grad-color-1),
      33.333%,
      var(--lin-grad-color-2)
    );
  --lin-grad-convex:
    linear-gradient(
      -45deg,
      hsl(0 0% 0% / 0.22),
      33.333%,
      hsl(0 0% 100% / 0.25)
    );
  // Stripes pattern
  --lin-grad-stripes:
    repeating-linear-gradient(
      -24deg,
      var(--trn),
      var(--trn) 4px,
      var(--accent) 0,
      var(--accent) 5px
    );
  // Noise variations
  --svg-noise: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 1920 1920' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");

  color-scheme: dark light;
  // https://drafts.csswg.org/css-ui/#widget-accent
  accent-color: var(--accent);

  &[data-theme-style=light] {
    --background-a25: hsl(var(--white) / 0.25);
    --background-a50: hsl(var(--white) / 0.5);
    --background-a60: hsl(var(--white) / 0.6);
    --background-a75: hsl(var(--white) / 0.75);
    --background-a80: hsl(var(--white) / 0.8);
    --background-a95: hsl(var(--white) / 0.95);
    --background: hsl(var(--white));
    --foreground-a25: hsl(var(--black) / 0.25);
    --foreground-a75: hsl(var(--black) / 0.75);
    --foreground-a80: hsl(var(--black) / 0.8);
    --foreground: hsl(var(--black));
    --shadow: hsl(var(--black) / 0.16);
    --selection-foreground: var(--background);
    --selection-background: var(--accent-shade);
    color-scheme: light;
  }

  &:not([data-theme-style]),
  &[data-theme-style=dark] {
    --background-a25: hsl(var(--black) / 0.5);
    --background-a50: hsl(var(--black) / 0.5);
    --background-a60: hsl(var(--black) / 0.6);
    --background-a75: hsl(var(--black) / 0.75);
    --background-a80: hsl(var(--black) / 0.8);
    --background-a95: hsl(var(--black) / 0.95);
    --background: hsl(var(--black));
    --foreground-a25: hsl(var(--white) / 0.25);
    --foreground-a75: hsl(var(--white) / 0.75);
    --foreground-a80: hsl(var(--white) / 0.8);
    --foreground: hsl(var(--white));
    --shadow: hsl(0 0% 0% / 0.25);
    --selection-background: var(--accent-shade);
    color-scheme: dark;
  }
}

@media screen and (prefers-reduced-motion: no-preference) {
  html,
  body { scroll-behavior: smooth; }
}

html {
  /* autoprefixer: off */

  // Ref → https://allthingssmitty.com/2020/05/11/css-fix-for-100vh-in-mobile-webkit/#disqus_thread
  inline-size: 100%;
  inline-size: -webkit-fill-available;
  block-size: 100%;
  block-size: -webkit-fill-available;

  /* Refs:
      → https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/
      → https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/AdjustingtheTextSize/AdjustingtheTextSize.html
  */
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}
/* autoprefixer: on */

// Contains layout, utilities and helper tokens
body {
  // ----------------------------------
  // Breakpoint widths
  // ----------------------------------

  // → https://getbootstrap.com/docs/5.0/layout/breakpoints/
  // → https://primer.style/css/support/breakpoints

  // Alternate: [xs: 320, sm: 640, md: 768, lg: 960, xl: 1280, xxl: 1920]
  --width-xs: 20em;
  --width-sm: 34em;
  --width-md: 48em;
  --width-lg: 62em;
  --width-xl: 80em;

  // (992 - 16 * 2) = 960
  --container-width: calc(var(--width-lg) - var(--gutter) * 2);
  --container-sm: 34rem;    // ~ 544px
  --container-md: 48rem;    // ~ 768px
  --container-lg: 63.25rem; // ~ 1012px
  --container-xl: 80rem;    // ~ 1280px

  // ----------------------------------
  // Aspect ratios
  // ----------------------------------

  // Square    := 1:1
  // Portrait  := 1:2 | 2:3 | 3:4 | 4:5 | 9:16
  // Landscape := 2:1 | 3:2 | 4:3 | 16:9
  --ratio-square: 1;
  --ratio-1: 1;
  --ratio-2: 4 / 3;  //= 1.333 (SD)
  --ratio-3: 16 / 9; //= 1.788 (HD)

  // ----------------------------------
  // Spacing scale
  // ----------------------------------

  --denser: calc(var(--spacer) * 0.5); // 0.25rem; ~ 4px
  --spacer: 0.5rem; // <-- Step size ~ 8px
  --spacer-2x: calc(var(--spacer) * 2);   // 0.5rem;    // ~ 8px
  --spacer-3x: calc(var(--spacer) * 3);   // 1rem;      // ~ 16px
  --spacer-4x: calc(var(--spacer) * 4);   // 1.5rem;    // ~ 24px
  --spacer-5x: calc(var(--spacer) * 5);   // 2rem;      // ~ 32px
  --spacer-6x: calc(var(--spacer) * 6);   // 2.5rem;    // ~ 40px
  --spacer-8x: calc(var(--spacer) * 8);   // 3rem;      // ~ 48px
  --spacer-10x: calc(var(--spacer) * 10); // 4rem;      // ~ 64px
  --spacer-12x: calc(var(--spacer) * 12); // 5rem;      // ~ 80px
  --spacer-14x: calc(var(--spacer) * 14); // 6rem;      // ~ 96px
  --spacer-16x: calc(var(--spacer) * 16); // 7rem;      // ~ 112px
  --spacer-20x: calc(var(--spacer) * 20); // 8rem;      // ~ 128px

  // calc → https://jxnblk.github.io/formula/
  --em-spacer-1: 0.0625em;  // 1/16
  --em-spacer-2: 0.125em;   // 1/8
  --em-spacer-3: 0.25em;    // 1/4
  --em-spacer-4: 0.375em;   // 3/8
  --em-spacer-5: 0.5em;     // 1/2
  --em-spacer-6: 0.75em;    // 3/4

  // ----------------------------------
  // Gutters
  // ----------------------------------

  // spec → https://drafts.csswg.org/css-align-3/#gutter
  --gutter-md: var(--spacer-2x);
  --gutter-lg: var(--spacer-3x);
  --gutter-condensed: var(--spacer-2x);
  --gutter-spacious-md: var(--spacer-2x);
  --gutter-spacious-lg: var(--spacer-4x);
  --gutter-spacious-xl: var(--spacer-5x);
  // --gutter: var(--gutter-md);
  --gutter: var(--spacer-3x);

  /* ------------------------------ Border Box ------------------------------ */

  // ----------------------------------
  // Decorations
  // ----------------------------------

  --border-width: 1px;
  --border-style: solid;
  --border-color: var(--gray-20);
  --border: var(--border-width) var(--border-style) var(--border-color);

  // Shaping → https://moderncss.dev/pure-css-shapes-3-ways/
  --caret-size: 10px;
  --caret-up: 0 7px var(--caret-size) 7px;
  --caret-right: 7px 0 7px var(--caret-size);

  // Rounded corners
  // Fixed
  --border-radius-1: 4px;
  --border-radius-2: 6px;
  --border-radius-3: 8px;
  --border-radius: var(--border-radius-2);
  // Responsive
  --radius-1: 0.5rem;
  --radius-2: 1rem;
  --radius-x: 1000rem; // <-- max radii, e.g. for a pill/stadium shaped button

  // ----------------------------------
  // Shadows
  // ----------------------------------

  // Vars from Primer CSS:
  // --shadow-sm: 0 1px 0 rgba(27, 31, 36, 0.04);
  // --shadow-md: 0 3px 6px rgba(140, 149, 159, 0.15);
  // --shadow-lg: 0 8px 24px rgba(140, 149, 159, 0.2);
  // --shadow-xl: 0 12px 28px rgba(140, 149, 159, 0.3);

  --shadow-a: 0.04;
  --shadow-sm: 0 1px 0 var(--shadow-color);
  --shadow-a: 0.15;
  --shadow-md: 0 3px 6px var(--shadow-color);
  --shadow-a: 0.2;
  --shadow-lg: 0 8px 24px var(--shadow-color);
  --shadow-a: 0.3;
  --shadow-xl: 0 12px 28px var(--shadow-color);

  // Generators for smooth layered shadows
  // → https://shadows.brumm.af/
  // → https://www.joshwcomeau.com/shadow-palette/
  --custom-shadow-1: 0 2.5rem 2rem -2rem hsl(0 0% 77.6%);

  // Fine-tune the colour with strength/intensity
  // → https://tobiasahlin.com/blog/layered-smooth-box-shadows/
  --shadow-hsl: 249deg 26% 29%; --shadow-a: 0.35;
  --shadow-color: hsl(var(--shadow-hsl) / var(--shadow-a, .125));
  --shadow-elevation-low:
    0.3px 0.5px 0.7px var(--shadow-color),
    0.4px 0.8px 1px -1.2px var(--shadow-color),
    1px 2px 2.5px -2.5px var(--shadow-color);
  --shadow-elevation-medium:
    0.3px 0.5px 0.7px var(--shadow-color),
    0.8px 1.6px 2px -0.8px var(--shadow-color),
    2.1px 4.1px 5.2px -1.7px var(--shadow-color),
    5px 10px 12.6px -2.5px var(--shadow-color);
  --shadow-elevation-high:
    0.3px 0.5px 0.7px var(--shadow-color),
    1.5px 2.9px 3.7px -0.4px var(--shadow-color),
    2.7px 5.4px 6.8px -0.7px var(--shadow-color),
    4.5px 8.9px 11.2px -1.1px var(--shadow-color),
    7.1px 14.3px 18px -1.4px var(--shadow-color),
    11.2px 22.3px 28.1px -1.8px var(--shadow-color),
    17px 33.9px 42.7px -2.1px var(--shadow-color),
    25px 50px 62.9px -2.5px var(--shadow-color);

  /* ------------------------------- Animation ------------------------------ */
  // https://github.com/primer/css/blob/main/src/utilities/animations.scss

  // ----------------------------------
  // Speed
  // ----------------------------------

  --duration-0: 75ms;
  --duration-1: 100ms;
  --duration-2: 150ms;
  --duration-3: 200ms;
  --duration-4: 300ms;
  --duration-5: 400ms;
  --duration-6: 500ms;
  --duration-7: 700ms;
  --duration-8: 1000ms;
  --duration-9: 1200ms;
  --duration: 0.4s; // typically in the range of 150–500 ms

  // ----------------------------------
  // Easing
  // ----------------------------------

  --ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
  --ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);
  // Eases w/ power of 2 (POT)
  --ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  --ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);
  --ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);
  // Eases w/ power of 3
  --ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
  --ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);
  --ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);
  // Eases w/ power of 4
  --ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);
  --ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);
  --ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);
  // https://cubic-bezier.com/#.2,1,.3,1
  --easing: cubic-bezier(0.2, 1, 0.3, 1);
  --ease-spring: cubic-bezier(0.4, 0, 0.7, 1.8);

  /* ------------------------------- Filtering ------------------------------ */
  // https://drafts.fxtf.org/filter-effects-2/#BackdropFilterProperty

  // ----------------------------------
  // Blurring
  // ----------------------------------

  --blur-xs: 5px;
  --blur-sm: 8px;
  --blur-md: 20px;
  --blur-lg: 30px;
  --blur-avg: 40px;
  --blur-max: 135px;
  // https://web.dev/backdrop-filter/
  --blur-os: 10px; // (macOS | iOS | Windows 10)-like frosted glass effect
  --blur: var(--blur-os);
  --smooth-glass: blur(9px) brightness(1.2); // smooth glass effect

  // ----------------------------------
  // Helpers
  // ----------------------------------

  // Misc helpers to fine control/tune GUI
  --big-int: 9999;
  --min-touch-target-size: 44px; // or 48px by Apple guidelines
  // what → https://w3c.github.io/wcag/understanding/target-size.html
  // spec → https://w3c.github.io/wcag/21/guidelines/#target-size
  // refs → https://w3c.github.io/wcag/understanding/target-size.html#resources
  --btn-min-size: var(--min-touch-target-size);
  --btn-min-hdim: 90px;
  --nav-max-vdim: 60px; // 8px + 44px + 8px
  --nav-max-vdim: calc(var(--min-touch-target-size) + var(--spacer) * 2);

  /* -------------------------- Clipping & Masking -------------------------- */
  // Gens:
  // → https://bennettfeely.com/clippy/
  // → https://codepen.io/stoumann/full/abZxoOM
  // Refs:
  // → https://web.dev/css-clipping/
  // → https://css-tricks.com/almanac/properties/c/clip-path/

  // ✁---------------------------------
  // Clipping Paths
  // ✃---------------------------------
  // https://yoksel.github.io/relative-clip-path/
  // https://augmented-ui.com/mixinmixer/

  --shape-circle: circle(50% at 50% 50%);
  --shape-square: polygon(0% 0%, 0% 100%, 100% 100%, 100% 0%);
  --shape-plus:
    polygon(
      35% 0%, 65% 0%, 65% 35%, 100% 35%,
      100% 60%, 65% 60%, 65% 100%, 35% 100%,
      35% 60%, 0% 60%, 0% 35%, 35% 35%
    );
  --shape-cross:
    polygon(
      20% 0%, 0% 20%, 30% 50%, 0% 80%,
      20% 100%, 50% 70%, 80% 100%, 100% 80%,
      70% 50%, 100% 20%, 80% 0%, 50% 30%
    );
  --shape-blinds:
    polygon(
      0% 5%,100% 5%,100% 25%,0% 25%,
      0% 40%,100% 40%,100% 60%,0% 60%,
      0% 75%,100% 75%,100% 95%,0% 95%
    );
  // Polygonal (pointing) shapes that may be morphing between:
  // https://drafts.csswg.org/css-shapes-1/#basic-shape-interpolation
  // 5-angled
  --shape-pentagon:
    polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
  --shape-point-left: polygon(25% 0%, 100% 0%, 100% 100%, 25% 100%, 0% 50%);
  --shape-point-right: polygon(0% 0%, 75% 0%, 100% 50%, 75% 100%, 0% 100%);
  // 6-angled
  --shape-hexagon:
    polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  --shape-chev-right:
    polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 25% 50%, 0% 0%);
  --shape-chev-left:
    polygon(100% 0, 50% 0, 0% 50%, 50% 100%, 100% 100%, 50% 50%);
  // 7-angled
  --shape-heptagon:
    polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
  --shape-arr-left:
    polygon(40% 0%, 40% 20%, 100% 20%, 100% 80%, 40% 80%, 40% 100%, 0% 50%);
  --shape-arr-right:
    polygon(0% 20%, 60% 20%, 60% 0%, 100% 50%, 60% 100%, 60% 80%, 0% 80%);

  min-inline-size: 100%;
  min-inline-size: -webkit-fill-available;
  min-block-size: 100vh;
  min-block-size: -webkit-fill-available;

  // scroll-padding-top: var(--header-height, 60px);
  overflow-x: hidden;
  color: var(--foreground);
  background: var(--background);
  transition:
    color var(--duration) var(--easing),
    background-color var(--duration) var(--easing);

  @include config.respond('tablet') {
    --gutter: var(--spacer-4x);
  }

  // https://caniuse.com/css-env-function
  // https://w3c.github.io/csswg-drafts/css-env-1/
  /* @supports (padding: env(safe-area-inset-top)) {
    & {
      padding-top: max(12px, env(safe-area-inset-top));
      padding-right: max(12px, env(safe-area-inset-right));
      padding-bottom: max(12px, env(safe-area-inset-bottom));
      padding-left: max(12px, env(safe-area-inset-left));
    }
  } */
}

main {
  min-inline-size: 100%;
  block-size: 100%;
  contain: size;
  position: relative;
}

section {
  position: relative;
  inline-size: 100vw;
  min-block-size: 100vh;

  // https://web.dev/content-visibility/
  content-visibility: auto;
  // contain-intrinsic-size: auto 1000px;
}

video-player {
  // https://codepen.io/thebabydino/pen/MWYrNaB
  --video-player-width: 100%;
  --video-player-height: 100vh;
}

theme-switch {
  --theme-switch-border-color: transparent;
  --theme-switch-icon-size: 1.25rem;
  --theme-switch-icon-filter: drop-shadow(0 3px 6px var(--accent-a50));

  color: var(--foreground);
  border-radius: 50%;
  // background-color: var(--background);

  :is([data-theme-style='light'], [data-theme-style='dark']) & {
    // --theme-switch-icon: var(--_sym-day-night);
    // --theme-switch-icon: var(--color-toggle);
  }
}

img:is(.muted) { filter: grayscale(25%) saturate(75%); }

dialog:where(#alert) { // <-- noscript alert
  z-index: var(--big-int);
  position: fixed;
  inset: 0;
  max-inline-size: 65ch;

  &::backdrop {
    background: repeating-linear-gradient(
      45deg,
      rgba(0, 0, 0, 0.2),
      rgba(0, 0, 0, 0.2) 1px,
      rgba(0, 0, 0, 0.3) 1px,
      rgba(0, 0, 0, 0.3) 20px
    );
    backdrop-filter: blur(3px);
  }

  & > [method=dialog] > :is(h2,p,button) {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, monospace;
    font-variation-settings: 'wght' var(--wght);
  }

  h2 { --wght: 525; }
  p { --wght: 400; }
  button {
    --wght: 500;
    background-color: var(--accent);
    &:hover { background-color: var(--accent-shade); }
  }
}

[data-hidden] {
  @include config.is-hidden;
}

.grecaptcha-badge {
  @include config.is-hidden;
}

// rounded-pill
[class*=cta] { border-radius: calc(var(--big-int) * 1px) !important; }
